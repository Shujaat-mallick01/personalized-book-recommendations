{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T K\\\\Desktop\\\\personalized-book-recommendations\\\\src\\\\components\\\\BookCoverUpload\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Upload, Image, X } from 'lucide-react';\nimport { saveCustomBookCover, removeCustomBookCover, hasCustomCover } from '../../utils/helpers';\nimport './BookCoverUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookCoverUpload = ({\n  book,\n  onCoverUpdate\n}) => {\n  _s();\n  const [isUploading, setIsUploading] = useState(false);\n  const [preview, setPreview] = useState(null);\n  const [hasCustom, setHasCustom] = useState(hasCustomCover(book.id));\n  React.useEffect(() => {\n    setHasCustom(hasCustomCover(book.id));\n  }, [book.id]);\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (!file.type.startsWith('image/')) {\n      alert('Please select an image file');\n      return;\n    }\n    if (file.size > 5 * 1024 * 1024) {\n      alert('File size must be less than 5MB');\n      return;\n    }\n    setIsUploading(true);\n    const reader = new FileReader();\n    reader.onload = e => {\n      const imageUrl = e.target.result;\n      setPreview(imageUrl);\n      const success = saveCustomBookCover(book.id, imageUrl);\n      if (success) {\n        setHasCustom(true);\n        if (onCoverUpdate) {\n          onCoverUpdate(book.id, imageUrl);\n        }\n      }\n      setIsUploading(false);\n    };\n    reader.readAsDataURL(file);\n  };\n  const removeCover = () => {\n    const success = removeCustomBookCover(book.id);\n    if (success) {\n      setPreview(null);\n      setHasCustom(false);\n      if (onCoverUpdate) {\n        onCoverUpdate(book.id, null);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-cover-upload\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-area\",\n      children: preview || hasCustom ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: preview || (hasCustom ? JSON.parse(localStorage.getItem('customBookCovers') || '{}')[book.id] : null),\n          alt: \"Cover preview\",\n          className: \"cover-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-cover\",\n          onClick: removeCover,\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"upload-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleFileSelect,\n          className: \"upload-input\",\n          disabled: isUploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-content\",\n          children: [/*#__PURE__*/_jsxDEV(Upload, {\n            size: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: isUploading ? 'Uploading...' : 'Upload Cover Image'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"JPG, PNG up to 5MB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(BookCoverUpload, \"lBeFF44gHRYAMpbufUqIh6TzkdE=\");\n_c = BookCoverUpload;\nexport default BookCoverUpload;\nvar _c;\n$RefreshReg$(_c, \"BookCoverUpload\");","map":{"version":3,"names":["React","useState","Upload","Image","X","saveCustomBookCover","removeCustomBookCover","hasCustomCover","jsxDEV","_jsxDEV","BookCoverUpload","book","onCoverUpdate","_s","isUploading","setIsUploading","preview","setPreview","hasCustom","setHasCustom","id","useEffect","handleFileSelect","event","file","target","files","type","startsWith","alert","size","reader","FileReader","onload","e","imageUrl","result","success","readAsDataURL","removeCover","className","children","src","JSON","parse","localStorage","getItem","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","accept","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/T K/Desktop/personalized-book-recommendations/src/components/BookCoverUpload/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Upload, Image, X } from 'lucide-react';\r\nimport { saveCustomBookCover, removeCustomBookCover, hasCustomCover } from '../../utils/helpers';\r\nimport './BookCoverUpload.css';\r\n\r\nconst BookCoverUpload = ({ book, onCoverUpdate }) => {\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [preview, setPreview] = useState(null);\r\n  const [hasCustom, setHasCustom] = useState(hasCustomCover(book.id));\r\n\r\n  React.useEffect(() => {\r\n    setHasCustom(hasCustomCover(book.id));\r\n  }, [book.id]);\r\n\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (!file.type.startsWith('image/')) {\r\n      alert('Please select an image file');\r\n      return;\r\n    }\r\n\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      alert('File size must be less than 5MB');\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const imageUrl = e.target.result;\r\n      setPreview(imageUrl);\r\n      \r\n      const success = saveCustomBookCover(book.id, imageUrl);\r\n      if (success) {\r\n        setHasCustom(true);\r\n        if (onCoverUpdate) {\r\n          onCoverUpdate(book.id, imageUrl);\r\n        }\r\n      }\r\n      setIsUploading(false);\r\n    };\r\n    \r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const removeCover = () => {\r\n    const success = removeCustomBookCover(book.id);\r\n    if (success) {\r\n      setPreview(null);\r\n      setHasCustom(false);\r\n      if (onCoverUpdate) {\r\n        onCoverUpdate(book.id, null);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"book-cover-upload\">\r\n      <div className=\"upload-area\">\r\n        {preview || hasCustom ? (\r\n          <div className=\"preview-container\">\r\n            <img \r\n              src={preview || (hasCustom ? JSON.parse(localStorage.getItem('customBookCovers') || '{}')[book.id] : null)} \r\n              alt=\"Cover preview\" \r\n              className=\"cover-preview\" \r\n            />\r\n            <button className=\"remove-cover\" onClick={removeCover}>\r\n              <X size={16} />\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <label className=\"upload-label\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={handleFileSelect}\r\n              className=\"upload-input\"\r\n              disabled={isUploading}\r\n            />\r\n            <div className=\"upload-content\">\r\n              <Upload size={32} />\r\n              <span>{isUploading ? 'Uploading...' : 'Upload Cover Image'}</span>\r\n              <small>JPG, PNG up to 5MB</small>\r\n            </div>\r\n          </label>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookCoverUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}