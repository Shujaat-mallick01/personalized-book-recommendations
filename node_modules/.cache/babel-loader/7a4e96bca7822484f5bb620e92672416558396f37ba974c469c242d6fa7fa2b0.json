{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T K\\\\Desktop\\\\personalized-book-recommendations\\\\src\\\\pages\\\\Recommendations\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useBooks } from '../../contexts/BookContext';\nimport { useUser } from '../../contexts/UserContext';\nimport BookCard from '../../components/BookCard';\nimport { searchBooks, getPopularBooks } from '../../services/bookAPI';\nimport { GENRE_OPTIONS } from '../../utils/helpers';\nimport { Sparkles, TrendingUp, RefreshCw, BookOpen, Star, Target, AlertCircle, ChevronRight, Filter, X, Home } from 'lucide-react';\nimport './Recommendations.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Recommendations = () => {\n  _s();\n  var _preferences$genres, _preferences$authors, _preferences$genres3;\n  const {\n    readingList,\n    ratings,\n    getBookStats,\n    selectedGenresForHome,\n    updateHomepageGenres\n  } = useBooks();\n  const {\n    preferences\n  } = useUser();\n  const [personalizedRecs, setPersonalizedRecs] = useState([]);\n  const [genreRecs, setGenreRecs] = useState([]);\n  const [trendingBooks, setTrendingBooks] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState(selectedGenresForHome || []);\n  const [activeTab, setActiveTab] = useState('for-you');\n  const [loading, setLoading] = useState(false);\n  const [genreLoading, setGenreLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const stats = getBookStats();\n  const hasPreferences = ((_preferences$genres = preferences.genres) === null || _preferences$genres === void 0 ? void 0 : _preferences$genres.length) > 0 || ((_preferences$authors = preferences.authors) === null || _preferences$authors === void 0 ? void 0 : _preferences$authors.length) > 0;\n  const hasRatings = Object.keys(ratings).length > 0;\n  useEffect(() => {\n    loadTrendingBooks();\n    if (hasPreferences || hasRatings) {\n      loadPersonalizedRecommendations();\n    }\n  }, [hasPreferences, hasRatings]);\n  useEffect(() => {\n    if (selectedGenres.length > 0) {\n      loadGenreBasedRecommendations();\n      // Update homepage to show books from selected genres\n      updateHomepageGenres(selectedGenres);\n    } else {\n      setGenreRecs([]);\n      // Clear homepage genre filter\n      updateHomepageGenres([]);\n    }\n  }, [selectedGenres, updateHomepageGenres]);\n\n  // ... existing functions remain the same ...\n\n  const loadTrendingBooks = async () => {\n    try {\n      setLoading(true);\n      const trending = await getPopularBooks(12);\n      setTrendingBooks(trending);\n    } catch (error) {\n      console.error('Error loading trending books:', error);\n      setError('Failed to load trending books');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadPersonalizedRecommendations = async () => {\n    try {\n      var _preferences$genres2, _preferences$authors2;\n      setLoading(true);\n      setError(null);\n      let recommendations = [];\n      if (((_preferences$genres2 = preferences.genres) === null || _preferences$genres2 === void 0 ? void 0 : _preferences$genres2.length) > 0) {\n        for (const genre of preferences.genres.slice(0, 3)) {\n          try {\n            const genreBooks = await searchBooks(`subject:${genre}`, 4);\n            const filteredBooks = genreBooks.filter(book => !readingList.some(rb => rb.id === book.id));\n            filteredBooks.forEach(book => {\n              book.recommendationReason = `Because you like ${genre}`;\n            });\n            recommendations = [...recommendations, ...filteredBooks.slice(0, 2)];\n          } catch (error) {\n            console.error(`Error loading ${genre} books:`, error);\n          }\n        }\n      }\n      if (((_preferences$authors2 = preferences.authors) === null || _preferences$authors2 === void 0 ? void 0 : _preferences$authors2.length) > 0) {\n        for (const author of preferences.authors.slice(0, 2)) {\n          try {\n            const authorBooks = await searchBooks(`inauthor:\"${author}\"`, 4);\n            const filteredBooks = authorBooks.filter(book => !readingList.some(rb => rb.id === book.id) && !recommendations.some(rb => rb.id === book.id));\n            filteredBooks.forEach(book => {\n              book.recommendationReason = `More books by ${author}`;\n            });\n            recommendations = [...recommendations, ...filteredBooks.slice(0, 2)];\n          } catch (error) {\n            console.error(`Error loading books by ${author}:`, error);\n          }\n        }\n      }\n      const uniqueRecommendations = recommendations.filter((book, index, self) => self.findIndex(b => b.id === book.id) === index).slice(0, 12);\n      setPersonalizedRecs(uniqueRecommendations);\n    } catch (error) {\n      console.error('Error loading personalized recommendations:', error);\n      setError('Failed to load personalized recommendations');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadGenreBasedRecommendations = async () => {\n    try {\n      setGenreLoading(true);\n      let allGenreBooks = [];\n      for (const genre of selectedGenres) {\n        try {\n          const genreBooks = await searchBooks(`subject:${genre}`, 8);\n          const filteredBooks = genreBooks.filter(book => !readingList.some(rb => rb.id === book.id));\n          filteredBooks.forEach(book => {\n            book.recommendationReason = `${genre} books for you`;\n          });\n          allGenreBooks = [...allGenreBooks, ...filteredBooks];\n        } catch (error) {\n          console.error(`Error loading ${genre} books:`, error);\n        }\n      }\n      const uniqueBooks = allGenreBooks.filter((book, index, self) => self.findIndex(b => b.id === book.id) === index).sort(() => Math.random() - 0.5).slice(0, 20);\n      setGenreRecs(uniqueBooks);\n    } catch (error) {\n      console.error('Error loading genre recommendations:', error);\n      setError('Failed to load genre recommendations');\n    } finally {\n      setGenreLoading(false);\n    }\n  };\n  const handleGenreToggle = genre => {\n    setSelectedGenres(prev => {\n      if (prev.includes(genre)) {\n        return prev.filter(g => g !== genre);\n      } else if (prev.length < 5) {\n        return [...prev, genre];\n      }\n      return prev;\n    });\n  };\n  const clearSelectedGenres = () => {\n    setSelectedGenres([]);\n  };\n  const handleRefreshRecommendations = () => {\n    if (hasPreferences || hasRatings) {\n      loadPersonalizedRecommendations();\n    }\n    if (selectedGenres.length > 0) {\n      loadGenreBasedRecommendations();\n    }\n    loadTrendingBooks();\n  };\n\n  // ... existing render functions remain the same ...\n\n  const renderGenreFilter = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genre-filter-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(Filter, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), \"Choose Genres to Explore\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-actions\",\n        children: selectedGenres.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"homepage-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(Home, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), \"Also showing on Homepage\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-filters\",\n            onClick: clearSelectedGenres,\n            children: [/*#__PURE__*/_jsxDEV(X, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), \"Clear All\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre-selection-grid\",\n      children: GENRE_OPTIONS.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGenreToggle(genre),\n        className: `genre-chip ${selectedGenres.includes(genre) ? 'selected' : ''}`,\n        disabled: !selectedGenres.includes(genre) && selectedGenres.length >= 5,\n        children: genre\n      }, genre, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), selectedGenres.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-genres-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Showing recommendations for: \", selectedGenres.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"genre-count\",\n        children: [\"(\", selectedGenres.length, \"/5 selected)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"homepage-sync-note\",\n        children: [/*#__PURE__*/_jsxDEV(Home, {\n          size: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), \"These genres are now featured on your Homepage\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n\n  // ... rest of the component remains the same ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendations-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendations-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n          size: 32\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), \"Your Book Recommendations\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendation-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), stats.totalBooks, \" books in library\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(Star, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), stats.totalRated, \" books rated\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(Target, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), ((_preferences$genres3 = preferences.genres) === null || _preferences$genres3 === void 0 ? void 0 : _preferences$genres3.length) || 0, \" favorite genres\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendations-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'for-you' ? 'active' : ''}`,\n        onClick: () => setActiveTab('for-you'),\n        children: [\"For You (\", personalizedRecs.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'by-genre' ? 'active' : ''}`,\n        onClick: () => setActiveTab('by-genre'),\n        children: [\"By Genre (\", genreRecs.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'trending' ? 'active' : ''}`,\n        onClick: () => setActiveTab('trending'),\n        children: [\"Trending (\", trendingBooks.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), activeTab === 'by-genre' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [renderGenreFilter(), genreLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Loading \", selectedGenres.join(', '), \" books...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }, this) : genreRecs.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendations-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(Filter, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this), selectedGenres.join(' & '), \" Books\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"books-grid\",\n          children: genreRecs.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n            book: book\n          }, book.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this) : selectedGenres.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-genre-state\",\n        children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n          size: 48\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"No books found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Try selecting different genres or check back later\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-genre-prompt\",\n        children: [/*#__PURE__*/_jsxDEV(Filter, {\n          size: 48\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Select genres to explore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose up to 5 genres to see personalized recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommendations, \"kIunsz0GSIOYDo2vThG0AbLqxkA=\", false, function () {\n  return [useBooks, useUser];\n});\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","useEffect","useBooks","useUser","BookCard","searchBooks","getPopularBooks","GENRE_OPTIONS","Sparkles","TrendingUp","RefreshCw","BookOpen","Star","Target","AlertCircle","ChevronRight","Filter","X","Home","jsxDEV","_jsxDEV","Fragment","_Fragment","Recommendations","_s","_preferences$genres","_preferences$authors","_preferences$genres3","readingList","ratings","getBookStats","selectedGenresForHome","updateHomepageGenres","preferences","personalizedRecs","setPersonalizedRecs","genreRecs","setGenreRecs","trendingBooks","setTrendingBooks","selectedGenres","setSelectedGenres","activeTab","setActiveTab","loading","setLoading","genreLoading","setGenreLoading","error","setError","stats","hasPreferences","genres","length","authors","hasRatings","Object","keys","loadTrendingBooks","loadPersonalizedRecommendations","loadGenreBasedRecommendations","trending","console","_preferences$genres2","_preferences$authors2","recommendations","genre","slice","genreBooks","filteredBooks","filter","book","some","rb","id","forEach","recommendationReason","author","authorBooks","uniqueRecommendations","index","self","findIndex","b","allGenreBooks","uniqueBooks","sort","Math","random","handleGenreToggle","prev","includes","g","clearSelectedGenres","handleRefreshRecommendations","renderGenreFilter","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","disabled","join","totalBooks","totalRated","_c","$RefreshReg$"],"sources":["C:/Users/T K/Desktop/personalized-book-recommendations/src/pages/Recommendations/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useBooks } from '../../contexts/BookContext';\r\nimport { useUser } from '../../contexts/UserContext';\r\nimport BookCard from '../../components/BookCard';\r\nimport { searchBooks, getPopularBooks } from '../../services/bookAPI';\r\nimport { GENRE_OPTIONS } from '../../utils/helpers';\r\nimport { \r\n  Sparkles, \r\n  TrendingUp, \r\n  RefreshCw, \r\n  BookOpen, \r\n  Star, \r\n  Target,\r\n  AlertCircle,\r\n  ChevronRight,\r\n  Filter,\r\n  X,\r\n  Home\r\n} from 'lucide-react';\r\nimport './Recommendations.css';\r\n\r\nconst Recommendations = () => {\r\n  const { readingList, ratings, getBookStats, selectedGenresForHome, updateHomepageGenres } = useBooks();\r\n  const { preferences } = useUser();\r\n  const [personalizedRecs, setPersonalizedRecs] = useState([]);\r\n  const [genreRecs, setGenreRecs] = useState([]);\r\n  const [trendingBooks, setTrendingBooks] = useState([]);\r\n  const [selectedGenres, setSelectedGenres] = useState(selectedGenresForHome || []);\r\n  const [activeTab, setActiveTab] = useState('for-you');\r\n  const [loading, setLoading] = useState(false);\r\n  const [genreLoading, setGenreLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const stats = getBookStats();\r\n  const hasPreferences = preferences.genres?.length > 0 || preferences.authors?.length > 0;\r\n  const hasRatings = Object.keys(ratings).length > 0;\r\n\r\n  useEffect(() => {\r\n    loadTrendingBooks();\r\n    if (hasPreferences || hasRatings) {\r\n      loadPersonalizedRecommendations();\r\n    }\r\n  }, [hasPreferences, hasRatings]);\r\n\r\n  useEffect(() => {\r\n    if (selectedGenres.length > 0) {\r\n      loadGenreBasedRecommendations();\r\n      // Update homepage to show books from selected genres\r\n      updateHomepageGenres(selectedGenres);\r\n    } else {\r\n      setGenreRecs([]);\r\n      // Clear homepage genre filter\r\n      updateHomepageGenres([]);\r\n    }\r\n  }, [selectedGenres, updateHomepageGenres]);\r\n\r\n  // ... existing functions remain the same ...\r\n\r\n  const loadTrendingBooks = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const trending = await getPopularBooks(12);\r\n      setTrendingBooks(trending);\r\n    } catch (error) {\r\n      console.error('Error loading trending books:', error);\r\n      setError('Failed to load trending books');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadPersonalizedRecommendations = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      let recommendations = [];\r\n\r\n      if (preferences.genres?.length > 0) {\r\n        for (const genre of preferences.genres.slice(0, 3)) {\r\n          try {\r\n            const genreBooks = await searchBooks(`subject:${genre}`, 4);\r\n            const filteredBooks = genreBooks.filter(book => \r\n              !readingList.some(rb => rb.id === book.id)\r\n            );\r\n            \r\n            filteredBooks.forEach(book => {\r\n              book.recommendationReason = `Because you like ${genre}`;\r\n            });\r\n            \r\n            recommendations = [...recommendations, ...filteredBooks.slice(0, 2)];\r\n          } catch (error) {\r\n            console.error(`Error loading ${genre} books:`, error);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (preferences.authors?.length > 0) {\r\n        for (const author of preferences.authors.slice(0, 2)) {\r\n          try {\r\n            const authorBooks = await searchBooks(`inauthor:\"${author}\"`, 4);\r\n            const filteredBooks = authorBooks.filter(book => \r\n              !readingList.some(rb => rb.id === book.id) &&\r\n              !recommendations.some(rb => rb.id === book.id)\r\n            );\r\n            \r\n            filteredBooks.forEach(book => {\r\n              book.recommendationReason = `More books by ${author}`;\r\n            });\r\n            \r\n            recommendations = [...recommendations, ...filteredBooks.slice(0, 2)];\r\n          } catch (error) {\r\n            console.error(`Error loading books by ${author}:`, error);\r\n          }\r\n        }\r\n      }\r\n\r\n      const uniqueRecommendations = recommendations\r\n        .filter((book, index, self) => self.findIndex(b => b.id === book.id) === index)\r\n        .slice(0, 12);\r\n\r\n      setPersonalizedRecs(uniqueRecommendations);\r\n      \r\n    } catch (error) {\r\n      console.error('Error loading personalized recommendations:', error);\r\n      setError('Failed to load personalized recommendations');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadGenreBasedRecommendations = async () => {\r\n    try {\r\n      setGenreLoading(true);\r\n      let allGenreBooks = [];\r\n\r\n      for (const genre of selectedGenres) {\r\n        try {\r\n          const genreBooks = await searchBooks(`subject:${genre}`, 8);\r\n          const filteredBooks = genreBooks.filter(book => \r\n            !readingList.some(rb => rb.id === book.id)\r\n          );\r\n          \r\n          filteredBooks.forEach(book => {\r\n            book.recommendationReason = `${genre} books for you`;\r\n          });\r\n          \r\n          allGenreBooks = [...allGenreBooks, ...filteredBooks];\r\n        } catch (error) {\r\n          console.error(`Error loading ${genre} books:`, error);\r\n        }\r\n      }\r\n\r\n      const uniqueBooks = allGenreBooks\r\n        .filter((book, index, self) => self.findIndex(b => b.id === book.id) === index)\r\n        .sort(() => Math.random() - 0.5)\r\n        .slice(0, 20);\r\n\r\n      setGenreRecs(uniqueBooks);\r\n      \r\n    } catch (error) {\r\n      console.error('Error loading genre recommendations:', error);\r\n      setError('Failed to load genre recommendations');\r\n    } finally {\r\n      setGenreLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenreToggle = (genre) => {\r\n    setSelectedGenres(prev => {\r\n      if (prev.includes(genre)) {\r\n        return prev.filter(g => g !== genre);\r\n      } else if (prev.length < 5) {\r\n        return [...prev, genre];\r\n      }\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  const clearSelectedGenres = () => {\r\n    setSelectedGenres([]);\r\n  };\r\n\r\n  const handleRefreshRecommendations = () => {\r\n    if (hasPreferences || hasRatings) {\r\n      loadPersonalizedRecommendations();\r\n    }\r\n    if (selectedGenres.length > 0) {\r\n      loadGenreBasedRecommendations();\r\n    }\r\n    loadTrendingBooks();\r\n  };\r\n\r\n  // ... existing render functions remain the same ...\r\n\r\n  const renderGenreFilter = () => (\r\n    <div className=\"genre-filter-section\">\r\n      <div className=\"filter-header\">\r\n        <h4>\r\n          <Filter size={20} />\r\n          Choose Genres to Explore\r\n        </h4>\r\n        <div className=\"filter-actions\">\r\n          {selectedGenres.length > 0 && (\r\n            <>\r\n              <span className=\"homepage-indicator\">\r\n                <Home size={16} />\r\n                Also showing on Homepage\r\n              </span>\r\n              <button className=\"clear-filters\" onClick={clearSelectedGenres}>\r\n                <X size={16} />\r\n                Clear All\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"genre-selection-grid\">\r\n        {GENRE_OPTIONS.map((genre) => (\r\n          <button\r\n            key={genre}\r\n            onClick={() => handleGenreToggle(genre)}\r\n            className={`genre-chip ${selectedGenres.includes(genre) ? 'selected' : ''}`}\r\n            disabled={!selectedGenres.includes(genre) && selectedGenres.length >= 5}\r\n          >\r\n            {genre}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      \r\n      {selectedGenres.length > 0 && (\r\n        <div className=\"selected-genres-display\">\r\n          <p>Showing recommendations for: {selectedGenres.join(', ')}</p>\r\n          <span className=\"genre-count\">({selectedGenres.length}/5 selected)</span>\r\n          <div className=\"homepage-sync-note\">\r\n            <Home size={14} />\r\n            These genres are now featured on your Homepage\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // ... rest of the component remains the same ...\r\n\r\n  return (\r\n    <div className=\"recommendations-page\">\r\n      <div className=\"recommendations-header\">\r\n        <h2>\r\n          <BookOpen size={32} />\r\n          Your Book Recommendations\r\n        </h2>\r\n        \r\n        <div className=\"recommendation-stats\">\r\n          <span className=\"stat\">\r\n            <BookOpen size={16} />\r\n            {stats.totalBooks} books in library\r\n          </span>\r\n          <span className=\"stat\">\r\n            <Star size={16} />\r\n            {stats.totalRated} books rated\r\n          </span>\r\n          <span className=\"stat\">\r\n            <Target size={16} />\r\n            {preferences.genres?.length || 0} favorite genres\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"recommendations-tabs\">\r\n        <button \r\n          className={`tab-button ${activeTab === 'for-you' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('for-you')}\r\n        >\r\n          For You ({personalizedRecs.length})\r\n        </button>\r\n        <button \r\n          className={`tab-button ${activeTab === 'by-genre' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('by-genre')}\r\n        >\r\n          By Genre ({genreRecs.length})\r\n        </button>\r\n        <button \r\n          className={`tab-button ${activeTab === 'trending' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('trending')}\r\n        >\r\n          Trending ({trendingBooks.length})\r\n        </button>\r\n      </div>\r\n\r\n      {activeTab === 'by-genre' && (\r\n        <div className=\"tab-content\">\r\n          {renderGenreFilter()}\r\n          \r\n          {genreLoading ? (\r\n            <div className=\"loading-state\">\r\n              <div className=\"spinner\"></div>\r\n              <p>Loading {selectedGenres.join(', ')} books...</p>\r\n            </div>\r\n          ) : genreRecs.length > 0 ? (\r\n            <div className=\"recommendations-section\">\r\n              <h3>\r\n                <Filter size={24} />\r\n                {selectedGenres.join(' & ')} Books\r\n              </h3>\r\n              <div className=\"books-grid\">\r\n                {genreRecs.map((book) => (\r\n                  <BookCard key={book.id} book={book} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : selectedGenres.length > 0 ? (\r\n            <div className=\"empty-genre-state\">\r\n              <BookOpen size={48} />\r\n              <h4>No books found</h4>\r\n              <p>Try selecting different genres or check back later</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"select-genre-prompt\">\r\n              <Filter size={48} />\r\n              <h4>Select genres to explore</h4>\r\n              <p>Choose up to 5 genres to see personalized recommendations</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* ... other tabs remain the same ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommendations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}