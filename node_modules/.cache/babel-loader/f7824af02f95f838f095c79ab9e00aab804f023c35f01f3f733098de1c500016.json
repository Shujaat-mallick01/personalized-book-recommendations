{"ast":null,"code":"import _objectSpread from\"C:/Users/T K/Desktop/personalized-book-recommendations/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useCallback,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const BookContext=/*#__PURE__*/createContext();export const useBooks=()=>{const context=useContext(BookContext);if(!context){throw new Error('useBooks must be used within BookProvider');}return context;};export const BookProvider=_ref=>{let{children}=_ref;const[readingList,setReadingList]=useState([]);const[ratings,setRatings]=useState({});const[searchResults,setSearchResults]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[selectedGenresForHome,setSelectedGenresForHome]=useState([]);// New state\n// Load data from localStorage on mount\nuseEffect(()=>{try{const savedReadingList=localStorage.getItem('bookApp_readingList');const savedRatings=localStorage.getItem('bookApp_ratings');const savedGenres=localStorage.getItem('bookApp_selectedGenres');if(savedReadingList){setReadingList(JSON.parse(savedReadingList));}if(savedRatings){setRatings(JSON.parse(savedRatings));}if(savedGenres){setSelectedGenresForHome(JSON.parse(savedGenres));}}catch(error){console.error('Error loading data from localStorage:',error);}},[]);// Save data to localStorage whenever it changes\nuseEffect(()=>{localStorage.setItem('bookApp_readingList',JSON.stringify(readingList));},[readingList]);useEffect(()=>{localStorage.setItem('bookApp_ratings',JSON.stringify(ratings));},[ratings]);useEffect(()=>{localStorage.setItem('bookApp_selectedGenres',JSON.stringify(selectedGenresForHome));},[selectedGenresForHome]);const addToReadingList=useCallback(book=>{setReadingList(prev=>{const exists=prev.find(b=>b.id===book.id);if(exists)return prev;return[...prev,_objectSpread(_objectSpread({},book),{},{dateAdded:new Date().toISOString(),readingStatus:'want-to-read'})];});},[]);const removeFromReadingList=useCallback(bookId=>{setReadingList(prev=>prev.filter(book=>book.id!==bookId));},[]);const updateReadingStatus=useCallback((bookId,status)=>{setReadingList(prev=>prev.map(book=>book.id===bookId?_objectSpread(_objectSpread({},book),{},{readingStatus:status,statusUpdated:new Date().toISOString()}):book));},[]);const rateBook=useCallback((bookId,rating)=>{setRatings(prev=>_objectSpread(_objectSpread({},prev),{},{[bookId]:rating}));},[]);const getBookStats=useCallback(()=>{const totalBooks=(readingList===null||readingList===void 0?void 0:readingList.length)||0;const totalRated=Object.keys(ratings||{}).length;const finishedBooks=(readingList===null||readingList===void 0?void 0:readingList.filter(book=>book.readingStatus==='finished').length)||0;const currentlyReading=(readingList===null||readingList===void 0?void 0:readingList.filter(book=>book.readingStatus==='currently-reading').length)||0;const ratingsArray=Object.values(ratings||{});return{totalBooks,totalRated,finishedBooks,currentlyReading,averageRating:ratingsArray.length>0?ratingsArray.reduce((sum,rating)=>sum+rating,0)/ratingsArray.length:0};},[readingList,ratings]);// New function to update homepage genre preferences\nconst updateHomepageGenres=useCallback(genres=>{setSelectedGenresForHome(genres||[]);},[]);const value={readingList:readingList||[],ratings:ratings||{},searchResults:searchResults||[],loading:loading||false,error,selectedGenresForHome:selectedGenresForHome||[],// Ensure it's always an array\naddToReadingList,removeFromReadingList,updateReadingStatus,rateBook,getBookStats,setSearchResults,setLoading,setError,updateHomepageGenres// New function\n};return/*#__PURE__*/_jsx(BookContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","useEffect","jsx","_jsx","BookContext","useBooks","context","Error","BookProvider","_ref","children","readingList","setReadingList","ratings","setRatings","searchResults","setSearchResults","loading","setLoading","error","setError","selectedGenresForHome","setSelectedGenresForHome","savedReadingList","localStorage","getItem","savedRatings","savedGenres","JSON","parse","console","setItem","stringify","addToReadingList","book","prev","exists","find","b","id","_objectSpread","dateAdded","Date","toISOString","readingStatus","removeFromReadingList","bookId","filter","updateReadingStatus","status","map","statusUpdated","rateBook","rating","getBookStats","totalBooks","length","totalRated","Object","keys","finishedBooks","currentlyReading","ratingsArray","values","averageRating","reduce","sum","updateHomepageGenres","genres","value","Provider"],"sources":["C:/Users/T K/Desktop/personalized-book-recommendations/src/contexts/BookContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\r\n\r\nconst BookContext = createContext();\r\n\r\nexport const useBooks = () => {\r\n  const context = useContext(BookContext);\r\n  if (!context) {\r\n    throw new Error('useBooks must be used within BookProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const BookProvider = ({ children }) => {\r\n  const [readingList, setReadingList] = useState([]);\r\n  const [ratings, setRatings] = useState({});\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedGenresForHome, setSelectedGenresForHome] = useState([]); // New state\r\n\r\n  // Load data from localStorage on mount\r\n  useEffect(() => {\r\n    try {\r\n      const savedReadingList = localStorage.getItem('bookApp_readingList');\r\n      const savedRatings = localStorage.getItem('bookApp_ratings');\r\n      const savedGenres = localStorage.getItem('bookApp_selectedGenres');\r\n\r\n      if (savedReadingList) {\r\n        setReadingList(JSON.parse(savedReadingList));\r\n      }\r\n\r\n      if (savedRatings) {\r\n        setRatings(JSON.parse(savedRatings));\r\n      }\r\n\r\n      if (savedGenres) {\r\n        setSelectedGenresForHome(JSON.parse(savedGenres));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading data from localStorage:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Save data to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('bookApp_readingList', JSON.stringify(readingList));\r\n  }, [readingList]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('bookApp_ratings', JSON.stringify(ratings));\r\n  }, [ratings]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('bookApp_selectedGenres', JSON.stringify(selectedGenresForHome));\r\n  }, [selectedGenresForHome]);\r\n\r\n  const addToReadingList = useCallback((book) => {\r\n    setReadingList(prev => {\r\n      const exists = prev.find(b => b.id === book.id);\r\n      if (exists) return prev;\r\n      return [...prev, { \r\n        ...book, \r\n        dateAdded: new Date().toISOString(),\r\n        readingStatus: 'want-to-read'\r\n      }];\r\n    });\r\n  }, []);\r\n\r\n  const removeFromReadingList = useCallback((bookId) => {\r\n    setReadingList(prev => prev.filter(book => book.id !== bookId));\r\n  }, []);\r\n\r\n  const updateReadingStatus = useCallback((bookId, status) => {\r\n    setReadingList(prev => \r\n      prev.map(book => \r\n        book.id === bookId \r\n          ? { ...book, readingStatus: status, statusUpdated: new Date().toISOString() }\r\n          : book\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  const rateBook = useCallback((bookId, rating) => {\r\n    setRatings(prev => ({ ...prev, [bookId]: rating }));\r\n  }, []);\r\n\r\n  const getBookStats = useCallback(() => {\r\n    const totalBooks = readingList?.length || 0;\r\n    const totalRated = Object.keys(ratings || {}).length;\r\n    const finishedBooks = readingList?.filter(book => book.readingStatus === 'finished').length || 0;\r\n    const currentlyReading = readingList?.filter(book => book.readingStatus === 'currently-reading').length || 0;\r\n    const ratingsArray = Object.values(ratings || {});\r\n\r\n    return {\r\n      totalBooks,\r\n      totalRated,\r\n      finishedBooks,\r\n      currentlyReading,\r\n      averageRating: ratingsArray.length > 0 ? \r\n        ratingsArray.reduce((sum, rating) => sum + rating, 0) / ratingsArray.length : 0\r\n    };\r\n  }, [readingList, ratings]);\r\n\r\n  // New function to update homepage genre preferences\r\n  const updateHomepageGenres = useCallback((genres) => {\r\n    setSelectedGenresForHome(genres || []);\r\n  }, []);\r\n\r\n  const value = {\r\n    readingList: readingList || [],\r\n    ratings: ratings || {},\r\n    searchResults: searchResults || [],\r\n    loading: loading || false,\r\n    error,\r\n    selectedGenresForHome: selectedGenresForHome || [], // Ensure it's always an array\r\n    addToReadingList,\r\n    removeFromReadingList,\r\n    updateReadingStatus,\r\n    rateBook,\r\n    getBookStats,\r\n    setSearchResults,\r\n    setLoading,\r\n    setError,\r\n    updateHomepageGenres, // New function\r\n  };\r\n\r\n  return <BookContext.Provider value={value}>{children}</BookContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}