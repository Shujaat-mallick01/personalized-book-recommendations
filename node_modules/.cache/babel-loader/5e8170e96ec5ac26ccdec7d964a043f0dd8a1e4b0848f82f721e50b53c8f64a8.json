{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T K\\\\Desktop\\\\personalized-book-recommendations\\\\src\\\\components\\\\SearchBar\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useBooks } from '../../contexts/BookContext';\nimport { searchBooks } from '../../services/bookAPI';\nimport { Search, X } from 'lucide-react';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const {\n    setSearchResults,\n    setLoading,\n    setError\n  } = useBooks();\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!query.trim()) return;\n    try {\n      setLoading(true);\n      setError(null);\n      const results = await searchBooks(query, 24);\n      setSearchResults(results);\n      setTimeout(() => {\n        const resultsSection = document.querySelector('.search-results');\n        if (resultsSection) {\n          resultsSection.scrollIntoView({\n            behavior: 'smooth'\n          });\n        }\n      }, 100);\n    } catch (error) {\n      setError('Failed to search books. Please try again.');\n      console.error('Search error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleClear = () => {\n    setQuery('');\n    setSearchResults([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-bar\",\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Search for books, authors, or genres...\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), query && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleClear,\n        className: \"clear-button\",\n        children: /*#__PURE__*/_jsxDEV(X, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \"Search\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"gqjqhXDoX+Yvcy4+cct6AGdcE0s=\", false, function () {\n  return [useBooks];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useBooks","searchBooks","Search","X","jsxDEV","_jsxDEV","SearchBar","_s","query","setQuery","setSearchResults","setLoading","setError","handleSearch","e","preventDefault","trim","results","setTimeout","resultsSection","document","querySelector","scrollIntoView","behavior","error","console","handleClear","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","_c","$RefreshReg$"],"sources":["C:/Users/T K/Desktop/personalized-book-recommendations/src/components/SearchBar/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useBooks } from '../../contexts/BookContext';\r\nimport { searchBooks } from '../../services/bookAPI';\r\nimport { Search, X } from 'lucide-react';\r\nimport './SearchBar.css';\r\n\r\nconst SearchBar = () => {\r\n  const [query, setQuery] = useState('');\r\n  const { setSearchResults, setLoading, setError } = useBooks();\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    if (!query.trim()) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const results = await searchBooks(query, 24);\r\n      setSearchResults(results);\r\n      \r\n      setTimeout(() => {\r\n        const resultsSection = document.querySelector('.search-results');\r\n        if (resultsSection) {\r\n          resultsSection.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n      }, 100);\r\n      \r\n    } catch (error) {\r\n      setError('Failed to search books. Please try again.');\r\n      console.error('Search error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setQuery('');\r\n    setSearchResults([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar-container\">\r\n      <form className=\"search-bar\" onSubmit={handleSearch}>\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          placeholder=\"Search for books, authors, or genres...\"\r\n          className=\"search-input\"\r\n        />\r\n        {query && (\r\n          <button \r\n            type=\"button\" \r\n            onClick={handleClear}\r\n            className=\"clear-button\"\r\n          >\r\n            <X size={16} />\r\n          </button>\r\n        )}\r\n        <button type=\"submit\" className=\"search-button\">\r\n          <Search size={16} />\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}