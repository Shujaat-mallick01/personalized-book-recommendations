{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T K\\\\Desktop\\\\personalized-book-recommendations\\\\src\\\\contexts\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const useUser = () => {\n  _s();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within UserProvider');\n  }\n  return context;\n};\n_s(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const UserProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    isSetup: false\n  });\n  const [preferences, setPreferences] = useState({\n    genres: [],\n    authors: [],\n    readingGoal: 12,\n    favoriteBooks: []\n  });\n\n  // Add premium state\n  const [isPremium, setIsPremium] = useState(false);\n\n  // Load from localStorage on mount\n  useEffect(() => {\n    const savedUser = localStorage.getItem('bookApp_user');\n    const savedPreferences = localStorage.getItem('bookApp_preferences');\n    const savedPremium = localStorage.getItem('bookApp_premium');\n    if (savedUser) setUser(JSON.parse(savedUser));\n    if (savedPreferences) setPreferences(JSON.parse(savedPreferences));\n    if (savedPremium) setIsPremium(JSON.parse(savedPremium));\n  }, []);\n\n  // Save to localStorage when data changes\n  useEffect(() => {\n    if (user.name) {\n      localStorage.setItem('bookApp_user', JSON.stringify(user));\n    }\n  }, [user]);\n  useEffect(() => {\n    localStorage.setItem('bookApp_preferences', JSON.stringify(preferences));\n  }, [preferences]);\n\n  // Save premium status to localStorage\n  useEffect(() => {\n    localStorage.setItem('bookApp_premium', JSON.stringify(isPremium));\n  }, [isPremium]);\n  const updateUser = userData => {\n    setUser(prev => ({\n      ...prev,\n      ...userData\n    }));\n  };\n  const updatePreferences = newPreferences => {\n    setPreferences(prev => ({\n      ...prev,\n      ...newPreferences\n    }));\n  };\n\n  // Add premium upgrade function\n  const upgradeToPremium = useCallback(() => {\n    console.log('Upgrading to premium...');\n    setIsPremium(true);\n\n    // Show success message\n    setTimeout(() => {\n      alert('ðŸŽ‰ Congratulations! You are now a Premium user!\\n\\nYou now have access to:\\nâ€¢ Book purchase links\\nâ€¢ Library integration\\nâ€¢ Advanced statistics\\nâ€¢ Unlimited reading lists');\n    }, 100);\n  }, []);\n\n  // Add downgrade function (for testing)\n  const cancelPremium = useCallback(() => {\n    setIsPremium(false);\n    alert('Premium subscription cancelled. You can upgrade again anytime!');\n  }, []);\n  const value = {\n    user,\n    setUser,\n    updateUser,\n    preferences,\n    setPreferences,\n    updatePreferences,\n    isPremium,\n    upgradeToPremium,\n    cancelPremium\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserProvider, \"eMhyfbUQ0G6AuF1tmxHwl+500dk=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","jsxDEV","_jsxDEV","UserContext","useUser","_s","context","Error","UserProvider","children","_s2","user","setUser","name","email","isSetup","preferences","setPreferences","genres","authors","readingGoal","favoriteBooks","isPremium","setIsPremium","savedUser","localStorage","getItem","savedPreferences","savedPremium","JSON","parse","setItem","stringify","updateUser","userData","prev","updatePreferences","newPreferences","upgradeToPremium","console","log","setTimeout","alert","cancelPremium","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/T K/Desktop/personalized-book-recommendations/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const useUser = () => {\r\n  const context = useContext(UserContext);\r\n  if (!context) {\r\n    throw new Error('useUser must be used within UserProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    email: '',\r\n    isSetup: false\r\n  });\r\n  \r\n  const [preferences, setPreferences] = useState({\r\n    genres: [],\r\n    authors: [],\r\n    readingGoal: 12,\r\n    favoriteBooks: []\r\n  });\r\n\r\n  // Add premium state\r\n  const [isPremium, setIsPremium] = useState(false);\r\n\r\n  // Load from localStorage on mount\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem('bookApp_user');\r\n    const savedPreferences = localStorage.getItem('bookApp_preferences');\r\n    const savedPremium = localStorage.getItem('bookApp_premium');\r\n    \r\n    if (savedUser) setUser(JSON.parse(savedUser));\r\n    if (savedPreferences) setPreferences(JSON.parse(savedPreferences));\r\n    if (savedPremium) setIsPremium(JSON.parse(savedPremium));\r\n  }, []);\r\n\r\n  // Save to localStorage when data changes\r\n  useEffect(() => {\r\n    if (user.name) {\r\n      localStorage.setItem('bookApp_user', JSON.stringify(user));\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('bookApp_preferences', JSON.stringify(preferences));\r\n  }, [preferences]);\r\n\r\n  // Save premium status to localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('bookApp_premium', JSON.stringify(isPremium));\r\n  }, [isPremium]);\r\n\r\n  const updateUser = (userData) => {\r\n    setUser(prev => ({ ...prev, ...userData }));\r\n  };\r\n\r\n  const updatePreferences = (newPreferences) => {\r\n    setPreferences(prev => ({ ...prev, ...newPreferences }));\r\n  };\r\n\r\n  // Add premium upgrade function\r\n  const upgradeToPremium = useCallback(() => {\r\n    console.log('Upgrading to premium...');\r\n    setIsPremium(true);\r\n    \r\n    // Show success message\r\n    setTimeout(() => {\r\n      alert('ðŸŽ‰ Congratulations! You are now a Premium user!\\n\\nYou now have access to:\\nâ€¢ Book purchase links\\nâ€¢ Library integration\\nâ€¢ Advanced statistics\\nâ€¢ Unlimited reading lists');\r\n    }, 100);\r\n  }, []);\r\n\r\n  // Add downgrade function (for testing)\r\n  const cancelPremium = useCallback(() => {\r\n    setIsPremium(false);\r\n    alert('Premium subscription cancelled. You can upgrade again anytime!');\r\n  }, []);\r\n\r\n  const value = {\r\n    user,\r\n    setUser,\r\n    updateUser,\r\n    preferences,\r\n    setPreferences,\r\n    updatePreferences,\r\n    isPremium,\r\n    upgradeToPremium,\r\n    cancelPremium\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={value}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}