{"ast":null,"code":"const BASE_URL = 'https://www.googleapis.com/books/v1/volumes';\n\n// Helper function to clean book data\nconst formatBookData = item => {\n  var _item$volumeInfo, _item$volumeInfo2, _item$volumeInfo3, _item$volumeInfo4, _item$volumeInfo4$ima, _item$volumeInfo5, _item$volumeInfo6, _item$volumeInfo7, _item$volumeInfo8, _item$volumeInfo9, _item$volumeInfo0;\n  return {\n    id: item.id,\n    title: ((_item$volumeInfo = item.volumeInfo) === null || _item$volumeInfo === void 0 ? void 0 : _item$volumeInfo.title) || 'No Title',\n    authors: ((_item$volumeInfo2 = item.volumeInfo) === null || _item$volumeInfo2 === void 0 ? void 0 : _item$volumeInfo2.authors) || ['Unknown Author'],\n    description: ((_item$volumeInfo3 = item.volumeInfo) === null || _item$volumeInfo3 === void 0 ? void 0 : _item$volumeInfo3.description) || 'No description available',\n    thumbnail: ((_item$volumeInfo4 = item.volumeInfo) === null || _item$volumeInfo4 === void 0 ? void 0 : (_item$volumeInfo4$ima = _item$volumeInfo4.imageLinks) === null || _item$volumeInfo4$ima === void 0 ? void 0 : _item$volumeInfo4$ima.thumbnail) || null,\n    categories: ((_item$volumeInfo5 = item.volumeInfo) === null || _item$volumeInfo5 === void 0 ? void 0 : _item$volumeInfo5.categories) || [],\n    publishedDate: ((_item$volumeInfo6 = item.volumeInfo) === null || _item$volumeInfo6 === void 0 ? void 0 : _item$volumeInfo6.publishedDate) || '',\n    pageCount: ((_item$volumeInfo7 = item.volumeInfo) === null || _item$volumeInfo7 === void 0 ? void 0 : _item$volumeInfo7.pageCount) || 0,\n    averageRating: ((_item$volumeInfo8 = item.volumeInfo) === null || _item$volumeInfo8 === void 0 ? void 0 : _item$volumeInfo8.averageRating) || 0,\n    ratingsCount: ((_item$volumeInfo9 = item.volumeInfo) === null || _item$volumeInfo9 === void 0 ? void 0 : _item$volumeInfo9.ratingsCount) || 0,\n    infoLink: ((_item$volumeInfo0 = item.volumeInfo) === null || _item$volumeInfo0 === void 0 ? void 0 : _item$volumeInfo0.infoLink) || ''\n  };\n};\nexport const searchBooks = async (query, maxResults = 20) => {\n  try {\n    const response = await fetch(`${BASE_URL}?q=${encodeURIComponent(query)}&maxResults=${maxResults}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch books');\n    }\n    const data = await response.json();\n    return (data.items || []).map(formatBookData);\n  } catch (error) {\n    console.error('Error searching books:', error);\n    throw error;\n  }\n};\nexport const getBooksByGenre = async (genre, maxResults = 25) => {\n  return searchBooks(`subject:${genre}`, maxResults);\n};\nexport const getBooksByAuthor = async (author, maxResults = 25) => {\n  return searchBooks(`inauthor:\"${author}\"`, maxResults);\n};\nexport const getPopularBooks = async (maxResults = 20) => {\n  const queries = ['bestseller', 'fiction', 'science', 'history', 'biography', 'sports'];\n  const randomQuery = queries[Math.floor(Math.random() * queries.length)];\n  return searchBooks(randomQuery, maxResults);\n};\nexport const getTrendingBooks = async (maxResults = 20) => {\n  return searchBooks('New York Times bestseller', maxResults);\n};","map":{"version":3,"names":["BASE_URL","formatBookData","item","_item$volumeInfo","_item$volumeInfo2","_item$volumeInfo3","_item$volumeInfo4","_item$volumeInfo4$ima","_item$volumeInfo5","_item$volumeInfo6","_item$volumeInfo7","_item$volumeInfo8","_item$volumeInfo9","_item$volumeInfo0","id","title","volumeInfo","authors","description","thumbnail","imageLinks","categories","publishedDate","pageCount","averageRating","ratingsCount","infoLink","searchBooks","query","maxResults","response","fetch","encodeURIComponent","ok","Error","data","json","items","map","error","console","getBooksByGenre","genre","getBooksByAuthor","author","getPopularBooks","queries","randomQuery","Math","floor","random","length","getTrendingBooks"],"sources":["C:/Users/T K/Desktop/personalized-book-recommendations/src/services/bookAPI.js"],"sourcesContent":["const BASE_URL = 'https://www.googleapis.com/books/v1/volumes';\r\n\r\n// Helper function to clean book data\r\nconst formatBookData = (item) => ({\r\n  id: item.id,\r\n  title: item.volumeInfo?.title || 'No Title',\r\n  authors: item.volumeInfo?.authors || ['Unknown Author'],\r\n  description: item.volumeInfo?.description || 'No description available',\r\n  thumbnail: item.volumeInfo?.imageLinks?.thumbnail || null,\r\n  categories: item.volumeInfo?.categories || [],\r\n  publishedDate: item.volumeInfo?.publishedDate || '',\r\n  pageCount: item.volumeInfo?.pageCount || 0,\r\n  averageRating: item.volumeInfo?.averageRating || 0,\r\n  ratingsCount: item.volumeInfo?.ratingsCount || 0,\r\n  infoLink: item.volumeInfo?.infoLink || ''\r\n});\r\n\r\nexport const searchBooks = async (query, maxResults = 20) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${BASE_URL}?q=${encodeURIComponent(query)}&maxResults=${maxResults}`\r\n    );\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch books');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return (data.items || []).map(formatBookData);\r\n  } catch (error) {\r\n    console.error('Error searching books:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getBooksByGenre = async (genre, maxResults = 25) => {\r\n  return searchBooks(`subject:${genre}`, maxResults);\r\n};\r\n\r\nexport const getBooksByAuthor = async (author, maxResults = 25) => {\r\n  return searchBooks(`inauthor:\"${author}\"`, maxResults);\r\n};\r\n\r\nexport const getPopularBooks = async (maxResults = 20) => {\r\n  const queries = ['bestseller', 'fiction', 'science', 'history', 'biography','sports'];\r\n  const randomQuery = queries[Math.floor(Math.random() * queries.length)];\r\n  return searchBooks(randomQuery, maxResults);\r\n};\r\n\r\nexport const getTrendingBooks = async (maxResults = 20) => {\r\n  return searchBooks('New York Times bestseller', maxResults);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}