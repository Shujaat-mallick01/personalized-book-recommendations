{"ast":null,"code":"// Reading time calculation\nexport const calculateReadingTime = (pageCount, wordsPerPage = 250, wordsPerMinute = 200) => {\n  if (!pageCount || pageCount <= 0) return 'Unknown';\n  const totalWords = pageCount * wordsPerPage;\n  const totalMinutes = totalWords / wordsPerMinute;\n  if (totalMinutes < 60) {\n    return `${Math.round(totalMinutes)} min`;\n  } else {\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = Math.round(totalMinutes % 60);\n    return minutes > 0 ? `${hours}h ${minutes}m` : `${hours}h`;\n  }\n};\nexport const getReadingDifficulty = pageCount => {\n  if (!pageCount || pageCount <= 0) return {\n    level: 'Unknown',\n    color: '#666'\n  };\n  if (pageCount < 200) return {\n    level: 'Quick',\n    color: '#28a745'\n  };\n  if (pageCount < 400) return {\n    level: 'Standard',\n    color: '#ffc107'\n  };\n  if (pageCount < 600) return {\n    level: 'Long',\n    color: '#fd7e14'\n  };\n  return {\n    level: 'Epic',\n    color: '#dc3545'\n  };\n};\n\n// Custom book cover helpers\nexport const hasCustomCover = bookId => {\n  try {\n    const customCovers = JSON.parse(localStorage.getItem('customBookCovers') || '{}');\n    return !!customCovers[bookId];\n  } catch (error) {\n    return false;\n  }\n};\nexport const saveCustomBookCover = (bookId, imageDataUrl) => {\n  try {\n    const customCovers = JSON.parse(localStorage.getItem('customBookCovers') || '{}');\n    customCovers[bookId] = imageDataUrl;\n    localStorage.setItem('customBookCovers', JSON.stringify(customCovers));\n    return true;\n  } catch (error) {\n    console.error('Error saving custom cover:', error);\n    return false;\n  }\n};\nexport const removeCustomBookCover = bookId => {\n  try {\n    const customCovers = JSON.parse(localStorage.getItem('customBookCovers') || '{}');\n    delete customCovers[bookId];\n    localStorage.setItem('customBookCovers', JSON.stringify(customCovers));\n    return true;\n  } catch (error) {\n    console.error('Error removing custom cover:', error);\n    return false;\n  }\n};\nexport const getBookImage = book => {\n  var _book$imageLinks, _book$imageLinks2;\n  try {\n    const customCovers = JSON.parse(localStorage.getItem('customBookCovers') || '{}');\n    if (customCovers[book.id]) return customCovers[book.id];\n  } catch (error) {\n    console.log('Error loading custom covers:', error);\n  }\n  if (book.thumbnail) return book.thumbnail;\n  if ((_book$imageLinks = book.imageLinks) !== null && _book$imageLinks !== void 0 && _book$imageLinks.thumbnail) return book.imageLinks.thumbnail;\n  if ((_book$imageLinks2 = book.imageLinks) !== null && _book$imageLinks2 !== void 0 && _book$imageLinks2.smallThumbnail) return book.imageLinks.smallThumbnail;\n  return null;\n};\n\n// Genre options\nexport const GENRE_OPTIONS = ['Fiction', 'Non-fiction', 'Mystery', 'Romance', 'Science Fiction', 'Fantasy', 'Biography', 'History', 'Self-help', 'Business', 'Psychology', 'Philosophy', 'Science', 'Technology', 'Health', 'Cooking', 'Travel', 'Art', 'Poetry', 'Drama'];\n\n// Reading status options\nexport const READING_STATUS_OPTIONS = [{\n  value: 'want-to-read',\n  label: 'Want to Read',\n  color: '#ffc107'\n}, {\n  value: 'currently-reading',\n  label: 'Currently Reading',\n  color: '#28a745'\n}, {\n  value: 'finished',\n  label: 'Finished',\n  color: '#007bff'\n}];\n\n// Recommendation algorithms\nexport const generateRecommendations = (userRatings, userPreferences, allBooks, readingList) => {\n  const readingListIds = readingList.map(book => book.id);\n  const availableBooks = allBooks.filter(book => !readingListIds.includes(book.id));\n  if (availableBooks.length === 0) return [];\n  const recommendationScores = availableBooks.map(book => {\n    let score = 0;\n    if (userPreferences.genres) {\n      userPreferences.genres.forEach(genre => {\n        if (book.categories && book.categories.some(cat => cat.toLowerCase().includes(genre.toLowerCase()))) {\n          score += 2;\n        }\n      });\n    }\n    if (book.averageRating >= 4) score += 2;\n    if (book.averageRating >= 4.5) score += 1;\n    return {\n      ...book,\n      recommendationScore: score\n    };\n  });\n  return recommendationScores.filter(book => book.recommendationScore > 0).sort((a, b) => b.recommendationScore - a.recommendationScore).slice(0, 20);\n};\nexport const getRecommendationReason = (book, userRatings, userPreferences, allBooks) => {\n  if (book.averageRating >= 4.5) {\n    return `Highly rated (${book.averageRating}/5)`;\n  }\n  return 'Recommended for you';\n};\nexport const formatBookForRecommendation = (book, reason) => ({\n  ...book,\n  recommendationReason: reason\n});\n\n// Utility functions\nexport const formatDate = dateString => {\n  if (!dateString) return 'Unknown';\n  const date = new Date(dateString);\n  return date.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n};\nexport const truncateText = (text, maxLength = 150) => {\n  if (!text) return 'No description available';\n  const cleanText = text.replace(/<[^>]*>/g, '');\n  return cleanText.length > maxLength ? cleanText.substring(0, maxLength) + '...' : cleanText;\n};\nexport const normalizeBookData = apiBook => {\n  var _volumeInfo$industryI, _volumeInfo$industryI2;\n  const volumeInfo = apiBook.volumeInfo || {};\n  return {\n    id: apiBook.id,\n    title: volumeInfo.title || 'Unknown Title',\n    authors: volumeInfo.authors || ['Unknown Author'],\n    description: volumeInfo.description || '',\n    publishedDate: volumeInfo.publishedDate || '',\n    pageCount: volumeInfo.pageCount || 0,\n    categories: volumeInfo.categories || [],\n    averageRating: volumeInfo.averageRating || 0,\n    ratingsCount: volumeInfo.ratingsCount || 0,\n    thumbnail: getBookImage(volumeInfo),\n    previewLink: volumeInfo.previewLink || '',\n    infoLink: volumeInfo.infoLink || '',\n    isbn: ((_volumeInfo$industryI = volumeInfo.industryIdentifiers) === null || _volumeInfo$industryI === void 0 ? void 0 : (_volumeInfo$industryI2 = _volumeInfo$industryI[0]) === null || _volumeInfo$industryI2 === void 0 ? void 0 : _volumeInfo$industryI2.identifier) || ''\n  };\n};","map":{"version":3,"names":["calculateReadingTime","pageCount","wordsPerPage","wordsPerMinute","totalWords","totalMinutes","Math","round","hours","floor","minutes","getReadingDifficulty","level","color","hasCustomCover","bookId","customCovers","JSON","parse","localStorage","getItem","error","saveCustomBookCover","imageDataUrl","setItem","stringify","console","removeCustomBookCover","getBookImage","book","_book$imageLinks","_book$imageLinks2","id","log","thumbnail","imageLinks","smallThumbnail","GENRE_OPTIONS","READING_STATUS_OPTIONS","value","label","generateRecommendations","userRatings","userPreferences","allBooks","readingList","readingListIds","map","availableBooks","filter","includes","length","recommendationScores","score","genres","forEach","genre","categories","some","cat","toLowerCase","averageRating","recommendationScore","sort","a","b","slice","getRecommendationReason","formatBookForRecommendation","reason","recommendationReason","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","truncateText","text","maxLength","cleanText","replace","substring","normalizeBookData","apiBook","_volumeInfo$industryI","_volumeInfo$industryI2","volumeInfo","title","authors","description","publishedDate","ratingsCount","previewLink","infoLink","isbn","industryIdentifiers","identifier"],"sources":["C:/Users/T K/Desktop/personalized-book-recommendations/src/utils/helpers.js"],"sourcesContent":["// Reading time calculation\r\nexport const calculateReadingTime = (pageCount, wordsPerPage = 250, wordsPerMinute = 200) => {\r\n  if (!pageCount || pageCount <= 0) return 'Unknown';\r\n  \r\n  const totalWords = pageCount * wordsPerPage;\r\n  const totalMinutes = totalWords / wordsPerMinute;\r\n  \r\n  if (totalMinutes < 60) {\r\n    return `${Math.round(totalMinutes)} min`;\r\n  } else {\r\n    const hours = Math.floor(totalMinutes / 60);\r\n    const minutes = Math.round(totalMinutes % 60);\r\n    return minutes > 0 ? `${hours}h ${minutes}m` : `${hours}h`;\r\n  }\r\n};\r\n\r\nexport const getReadingDifficulty = (pageCount) => {\r\n  if (!pageCount || pageCount <= 0) return { level: 'Unknown', color: '#666' };\r\n  \r\n  if (pageCount < 200) return { level: 'Quick', color: '#28a745' };\r\n  if (pageCount < 400) return { level: 'Standard', color: '#ffc107' };\r\n  if (pageCount < 600) return { level: 'Long', color: '#fd7e14' };\r\n  return { level: 'Epic', color: '#dc3545' };\r\n};\r\n\r\n// Custom book cover helpers\r\nexport const hasCustomCover = (bookId) => {\r\n  try {\r\n    const customCovers = JSON.parse(localStorage.getItem('customBookCovers') || '{}');\r\n    return !!customCovers[bookId];\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const saveCustomBookCover = (bookId, imageDataUrl) => {\r\n  try {\r\n    const customCovers = JSON.parse(localStorage.getItem('customBookCovers') || '{}');\r\n    customCovers[bookId] = imageDataUrl;\r\n    localStorage.setItem('customBookCovers', JSON.stringify(customCovers));\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error saving custom cover:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const removeCustomBookCover = (bookId) => {\r\n  try {\r\n    const customCovers = JSON.parse(localStorage.getItem('customBookCovers') || '{}');\r\n    delete customCovers[bookId];\r\n    localStorage.setItem('customBookCovers', JSON.stringify(customCovers));\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error removing custom cover:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const getBookImage = (book) => {\r\n  try {\r\n    const customCovers = JSON.parse(localStorage.getItem('customBookCovers') || '{}');\r\n    if (customCovers[book.id]) return customCovers[book.id];\r\n  } catch (error) {\r\n    console.log('Error loading custom covers:', error);\r\n  }\r\n  \r\n  if (book.thumbnail) return book.thumbnail;\r\n  if (book.imageLinks?.thumbnail) return book.imageLinks.thumbnail;\r\n  if (book.imageLinks?.smallThumbnail) return book.imageLinks.smallThumbnail;\r\n  return null;\r\n};\r\n\r\n// Genre options\r\nexport const GENRE_OPTIONS = [\r\n  'Fiction', 'Non-fiction', 'Mystery', 'Romance', 'Science Fiction', \r\n  'Fantasy', 'Biography', 'History', 'Self-help', 'Business',\r\n  'Psychology', 'Philosophy', 'Science', 'Technology', 'Health',\r\n  'Cooking', 'Travel', 'Art', 'Poetry', 'Drama'\r\n];\r\n\r\n// Reading status options\r\nexport const READING_STATUS_OPTIONS = [\r\n  {\r\n    value: 'want-to-read',\r\n    label: 'Want to Read',\r\n    color: '#ffc107'\r\n  },\r\n  {\r\n    value: 'currently-reading',\r\n    label: 'Currently Reading',\r\n    color: '#28a745'\r\n  },\r\n  {\r\n    value: 'finished',\r\n    label: 'Finished',\r\n    color: '#007bff'\r\n  }\r\n];\r\n\r\n// Recommendation algorithms\r\nexport const generateRecommendations = (userRatings, userPreferences, allBooks, readingList) => {\r\n  const readingListIds = readingList.map(book => book.id);\r\n  const availableBooks = allBooks.filter(book => !readingListIds.includes(book.id));\r\n  \r\n  if (availableBooks.length === 0) return [];\r\n\r\n  const recommendationScores = availableBooks.map(book => {\r\n    let score = 0;\r\n    \r\n    if (userPreferences.genres) {\r\n      userPreferences.genres.forEach(genre => {\r\n        if (book.categories && book.categories.some(cat => \r\n          cat.toLowerCase().includes(genre.toLowerCase())\r\n        )) {\r\n          score += 2;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (book.averageRating >= 4) score += 2;\r\n    if (book.averageRating >= 4.5) score += 1;\r\n\r\n    return { ...book, recommendationScore: score };\r\n  });\r\n\r\n  return recommendationScores\r\n    .filter(book => book.recommendationScore > 0)\r\n    .sort((a, b) => b.recommendationScore - a.recommendationScore)\r\n    .slice(0, 20);\r\n};\r\n\r\nexport const getRecommendationReason = (book, userRatings, userPreferences, allBooks) => {\r\n  if (book.averageRating >= 4.5) {\r\n    return `Highly rated (${book.averageRating}/5)`;\r\n  }\r\n  return 'Recommended for you';\r\n};\r\n\r\nexport const formatBookForRecommendation = (book, reason) => ({\r\n  ...book,\r\n  recommendationReason: reason\r\n});\r\n\r\n// Utility functions\r\nexport const formatDate = (dateString) => {\r\n  if (!dateString) return 'Unknown';\r\n  const date = new Date(dateString);\r\n  return date.toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric'\r\n  });\r\n};\r\n\r\nexport const truncateText = (text, maxLength = 150) => {\r\n  if (!text) return 'No description available';\r\n  const cleanText = text.replace(/<[^>]*>/g, '');\r\n  return cleanText.length > maxLength ? \r\n    cleanText.substring(0, maxLength) + '...' : \r\n    cleanText;\r\n};\r\n\r\nexport const normalizeBookData = (apiBook) => {\r\n  const volumeInfo = apiBook.volumeInfo || {};\r\n  \r\n  return {\r\n    id: apiBook.id,\r\n    title: volumeInfo.title || 'Unknown Title',\r\n    authors: volumeInfo.authors || ['Unknown Author'],\r\n    description: volumeInfo.description || '',\r\n    publishedDate: volumeInfo.publishedDate || '',\r\n    pageCount: volumeInfo.pageCount || 0,\r\n    categories: volumeInfo.categories || [],\r\n    averageRating: volumeInfo.averageRating || 0,\r\n    ratingsCount: volumeInfo.ratingsCount || 0,\r\n    thumbnail: getBookImage(volumeInfo),\r\n    previewLink: volumeInfo.previewLink || '',\r\n    infoLink: volumeInfo.infoLink || '',\r\n    isbn: volumeInfo.industryIdentifiers?.[0]?.identifier || ''\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}