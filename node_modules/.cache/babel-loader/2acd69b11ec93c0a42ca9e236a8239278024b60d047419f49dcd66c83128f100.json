{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T K\\\\Desktop\\\\personalized-book-recommendations\\\\src\\\\contexts\\\\BookContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookContext = /*#__PURE__*/createContext();\nexport const useBooks = () => {\n  _s();\n  const context = useContext(BookContext);\n  if (!context) {\n    throw new Error('useBooks must be used within BookProvider');\n  }\n  return context;\n};\n_s(useBooks, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const BookProvider = ({\n  children\n}) => {\n  _s2();\n  const [readingList, setReadingList] = useState([]);\n  const [ratings, setRatings] = useState({});\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedGenresForHome, setSelectedGenresForHome] = useState([]); // New state\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    try {\n      const savedReadingList = localStorage.getItem('bookApp_readingList');\n      const savedRatings = localStorage.getItem('bookApp_ratings');\n      const savedGenres = localStorage.getItem('bookApp_selectedGenres');\n      if (savedReadingList) {\n        setReadingList(JSON.parse(savedReadingList));\n      }\n      if (savedRatings) {\n        setRatings(JSON.parse(savedRatings));\n      }\n      if (savedGenres) {\n        setSelectedGenresForHome(JSON.parse(savedGenres));\n      }\n    } catch (error) {\n      console.error('Error loading data from localStorage:', error);\n    }\n  }, []);\n\n  // Save data to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('bookApp_readingList', JSON.stringify(readingList));\n  }, [readingList]);\n  useEffect(() => {\n    localStorage.setItem('bookApp_ratings', JSON.stringify(ratings));\n  }, [ratings]);\n  useEffect(() => {\n    localStorage.setItem('bookApp_selectedGenres', JSON.stringify(selectedGenresForHome));\n  }, [selectedGenresForHome]);\n  const addToReadingList = useCallback(book => {\n    setReadingList(prev => {\n      const exists = prev.find(b => b.id === book.id);\n      if (exists) return prev;\n      return [...prev, {\n        ...book,\n        dateAdded: new Date().toISOString(),\n        readingStatus: 'want-to-read'\n      }];\n    });\n  }, []);\n  const removeFromReadingList = useCallback(bookId => {\n    setReadingList(prev => prev.filter(book => book.id !== bookId));\n  }, []);\n  const updateReadingStatus = useCallback((bookId, status) => {\n    setReadingList(prev => prev.map(book => book.id === bookId ? {\n      ...book,\n      readingStatus: status,\n      statusUpdated: new Date().toISOString()\n    } : book));\n  }, []);\n  const rateBook = useCallback((bookId, rating) => {\n    setRatings(prev => ({\n      ...prev,\n      [bookId]: rating\n    }));\n  }, []);\n  const getBookStats = useCallback(() => {\n    const totalBooks = (readingList === null || readingList === void 0 ? void 0 : readingList.length) || 0;\n    const totalRated = Object.keys(ratings || {}).length;\n    const finishedBooks = (readingList === null || readingList === void 0 ? void 0 : readingList.filter(book => book.readingStatus === 'finished').length) || 0;\n    const currentlyReading = (readingList === null || readingList === void 0 ? void 0 : readingList.filter(book => book.readingStatus === 'currently-reading').length) || 0;\n    const ratingsArray = Object.values(ratings || {});\n    return {\n      totalBooks,\n      totalRated,\n      finishedBooks,\n      currentlyReading,\n      averageRating: ratingsArray.length > 0 ? ratingsArray.reduce((sum, rating) => sum + rating, 0) / ratingsArray.length : 0\n    };\n  }, [readingList, ratings]);\n\n  // New function to update homepage genre preferences\n  const updateHomepageGenres = useCallback(genres => {\n    setSelectedGenresForHome(genres || []);\n  }, []);\n  const value = {\n    readingList: readingList || [],\n    ratings: ratings || {},\n    searchResults: searchResults || [],\n    loading: loading || false,\n    error,\n    selectedGenresForHome: selectedGenresForHome || [],\n    // Ensure it's always an array\n    addToReadingList,\n    removeFromReadingList,\n    updateReadingStatus,\n    rateBook,\n    getBookStats,\n    setSearchResults,\n    setLoading,\n    setError,\n    updateHomepageGenres // New function\n  };\n  return /*#__PURE__*/_jsxDEV(BookContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 10\n  }, this);\n};\n_s2(BookProvider, \"oMixvUSOdEtQVxCJWupA5+4YG/4=\");\n_c = BookProvider;\nvar _c;\n$RefreshReg$(_c, \"BookProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","useEffect","jsxDEV","_jsxDEV","BookContext","useBooks","_s","context","Error","BookProvider","children","_s2","readingList","setReadingList","ratings","setRatings","searchResults","setSearchResults","loading","setLoading","error","setError","selectedGenresForHome","setSelectedGenresForHome","savedReadingList","localStorage","getItem","savedRatings","savedGenres","JSON","parse","console","setItem","stringify","addToReadingList","book","prev","exists","find","b","id","dateAdded","Date","toISOString","readingStatus","removeFromReadingList","bookId","filter","updateReadingStatus","status","map","statusUpdated","rateBook","rating","getBookStats","totalBooks","length","totalRated","Object","keys","finishedBooks","currentlyReading","ratingsArray","values","averageRating","reduce","sum","updateHomepageGenres","genres","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/T K/Desktop/personalized-book-recommendations/src/contexts/BookContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\r\n\r\nconst BookContext = createContext();\r\n\r\nexport const useBooks = () => {\r\n  const context = useContext(BookContext);\r\n  if (!context) {\r\n    throw new Error('useBooks must be used within BookProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const BookProvider = ({ children }) => {\r\n  const [readingList, setReadingList] = useState([]);\r\n  const [ratings, setRatings] = useState({});\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedGenresForHome, setSelectedGenresForHome] = useState([]); // New state\r\n\r\n  // Load data from localStorage on mount\r\n  useEffect(() => {\r\n    try {\r\n      const savedReadingList = localStorage.getItem('bookApp_readingList');\r\n      const savedRatings = localStorage.getItem('bookApp_ratings');\r\n      const savedGenres = localStorage.getItem('bookApp_selectedGenres');\r\n\r\n      if (savedReadingList) {\r\n        setReadingList(JSON.parse(savedReadingList));\r\n      }\r\n\r\n      if (savedRatings) {\r\n        setRatings(JSON.parse(savedRatings));\r\n      }\r\n\r\n      if (savedGenres) {\r\n        setSelectedGenresForHome(JSON.parse(savedGenres));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading data from localStorage:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Save data to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('bookApp_readingList', JSON.stringify(readingList));\r\n  }, [readingList]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('bookApp_ratings', JSON.stringify(ratings));\r\n  }, [ratings]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('bookApp_selectedGenres', JSON.stringify(selectedGenresForHome));\r\n  }, [selectedGenresForHome]);\r\n\r\n  const addToReadingList = useCallback((book) => {\r\n    setReadingList(prev => {\r\n      const exists = prev.find(b => b.id === book.id);\r\n      if (exists) return prev;\r\n      return [...prev, { \r\n        ...book, \r\n        dateAdded: new Date().toISOString(),\r\n        readingStatus: 'want-to-read'\r\n      }];\r\n    });\r\n  }, []);\r\n\r\n  const removeFromReadingList = useCallback((bookId) => {\r\n    setReadingList(prev => prev.filter(book => book.id !== bookId));\r\n  }, []);\r\n\r\n  const updateReadingStatus = useCallback((bookId, status) => {\r\n    setReadingList(prev => \r\n      prev.map(book => \r\n        book.id === bookId \r\n          ? { ...book, readingStatus: status, statusUpdated: new Date().toISOString() }\r\n          : book\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  const rateBook = useCallback((bookId, rating) => {\r\n    setRatings(prev => ({ ...prev, [bookId]: rating }));\r\n  }, []);\r\n\r\n  const getBookStats = useCallback(() => {\r\n    const totalBooks = readingList?.length || 0;\r\n    const totalRated = Object.keys(ratings || {}).length;\r\n    const finishedBooks = readingList?.filter(book => book.readingStatus === 'finished').length || 0;\r\n    const currentlyReading = readingList?.filter(book => book.readingStatus === 'currently-reading').length || 0;\r\n    const ratingsArray = Object.values(ratings || {});\r\n\r\n    return {\r\n      totalBooks,\r\n      totalRated,\r\n      finishedBooks,\r\n      currentlyReading,\r\n      averageRating: ratingsArray.length > 0 ? \r\n        ratingsArray.reduce((sum, rating) => sum + rating, 0) / ratingsArray.length : 0\r\n    };\r\n  }, [readingList, ratings]);\r\n\r\n  // New function to update homepage genre preferences\r\n  const updateHomepageGenres = useCallback((genres) => {\r\n    setSelectedGenresForHome(genres || []);\r\n  }, []);\r\n\r\n  const value = {\r\n    readingList: readingList || [],\r\n    ratings: ratings || {},\r\n    searchResults: searchResults || [],\r\n    loading: loading || false,\r\n    error,\r\n    selectedGenresForHome: selectedGenresForHome || [], // Ensure it's always an array\r\n    addToReadingList,\r\n    removeFromReadingList,\r\n    updateReadingStatus,\r\n    rateBook,\r\n    getBookStats,\r\n    setSearchResults,\r\n    setLoading,\r\n    setError,\r\n    updateHomepageGenres, // New function\r\n  };\r\n\r\n  return <BookContext.Provider value={value}>{children}</BookContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}